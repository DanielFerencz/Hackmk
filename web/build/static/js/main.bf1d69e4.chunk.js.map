{"version":3,"sources":["service/post.js","service/user.js","components/other/NavBar.jsx","components/post/Post.jsx","components/other/Msg.jsx","components/post/Posts.jsx","components/other/Footer.jsx","service/script.js","components/other/Login.jsx","components/other/Register.jsx","service/invitation.js","service/deleteInvitation.js","components/invitation/Invitations.jsx","service/picture.js","components/post/Pictures.jsx","components/post/UploadPhoto.jsx","components/post/PostDetails.jsx","components/post/CreatePost.jsx","components/invitation/CreateInvitation.jsx","components/invitation/MyInvitations.jsx","App.jsx","index.jsx"],"names":["apiServerUrl","findAllPosts","a","fetch","response","json","posts","status","findPost","pstID","post","createPost","method","mode","credentials","headers","body","JSON","stringify","msg","findUser","url","NavBar","props","state","user","autoBind","this","setState","document","cookie","AppBar","style","background","Toolbar","Typography","variant","Button","color","href","role","onClick","onSubmit","username","React","Component","Post","pst","Grid","item","className","id","_id","to","name","game","genre","Msg","length","Posts","nameFilter","genreFilter","genreDict","makeDict","event","target","value","dict","filteredPosts","filter","toLowerCase","includes","forEach","container","alignItems","justifyContent","justify","direction","align","paragraph","htmlFor","type","placeholder","onChange","genreChange","Object","keys","map","key","Footer","loginSubmit","formJSON","getElementById","password","token","registerSubmit","password1","password2","invitation","Login","preventDefault","window","location","Item","required","Register","history","push","findInvitations","invitations","findMyInvitations","createInvitation","postId","date","time","description","requirements","deleteInvitation","invId","resp","remove","getElementsByClassName","div1","createElement","setAttribute","text1","createTextNode","appendChild","insertBefore","firstChild","alert","message","acceptInvitation","declineInvitation","Invitations","statusFilter","statusDict","firstDate","secondDate","inv","Date","parse","empty","jusitfy","adminID","notAdmin","statusChange","firstDateChange","secondDateChange","boxSizing","acceptInv","declineInv","formDataServerUrl","findPictures","pictures","uploadPhoto","photoForm","formData","FormData","Pictures","pic","src","photo","alt","UploadPhoto","componentDidMount","encType","PostDetails","match","params","city","email","telefon","TextField","multiline","rows","cols","details","CreatePost","Input","CreateInvitation","selectedPost","invitationDate","invitationTime","invit","console","log","i","parseInt","FormControl","Select","label","postChange","MenuItem","changeInvitationDate","changeInvitationTime","MyInvitations","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf1d69e4.chunk.js","sourcesContent":["export const apiServerUrl = 'http://localhost:8080/api';\r\n\r\n// Az osszes bejegyzes lekerese\r\nexport async function findAllPosts() {\r\n    const response = await fetch(`${apiServerUrl}/posts`);\r\n    const posts = await response.json();\r\n    if (response.status === 200) return posts;\r\n    return [];\r\n}\r\n\r\n// Egy bejegyzes adatai\r\nexport async function findPost(pstID) {\r\n    const response = await fetch(`${apiServerUrl}/post?pst_id=${pstID}`);\r\n    const post = await response.json();\r\n\r\n    if (response.status === 200) {\r\n        return post;\r\n    }\r\n    return {};\r\n}\r\n\r\n// bejegyzes letrehozasa, elkuldese\r\nexport async function createPost(post) {\r\n    const response = await fetch(`${apiServerUrl}/createPost`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(post),\r\n    });\r\n    const body = await response.json();\r\n    if (response.status < 400) {\r\n        return 'OK';\r\n    }\r\n    if (response.status >= 500) return 'Server problem';\r\n    return body.msg;\r\n}\r\n\r\nexport default apiServerUrl;\r\n","import url from './post.js';\r\n\r\n// user lekerese\r\nexport default async function findUser() {\r\n    const response = await fetch(`${url}/user`, {\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n    });\r\n    const body = await response.json();\r\n\r\n    if (response.status === 203) {\r\n        return {};\r\n    }\r\n\r\n    return body;\r\n}\r\n","import autoBind from 'auto-bind';\r\nimport React from 'react';\r\nimport findUser from '../../service/user.js';\r\nimport { AppBar, Toolbar, Typography, Button } from \"@mui/material\";\r\n\r\n// Navbar letrehozasa, logout eseten cookie torlese\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    onSubmit() {\r\n        document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n        this.setState({ user: {} });\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n        if (JSON.stringify(user) === '{}') {\r\n            return (\r\n                <>\r\n                    <AppBar style={{ background: '#2b6777' }}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\">\r\n                                <Button color='inherit' href=\"/\">Posts</Button>\r\n                                <Button color='inherit' href=\"/login\"> Login</Button>\r\n                                <Button color='inherit' href=\"/register\"> Register</Button>\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Toolbar />\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <AppBar style={{ background: '#2b6777' }}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                            <Button color='inherit' href=\"/\">Posts</Button>\r\n                            {(user.role === 'admin') ? <Button color='inherit' href=\"/create_post\">Create Post</Button> : ''}\r\n                            {(user.role === 'user') ? <Button color='inherit' href=\"/create_invitation\">Create Invitation</Button> : ''}\r\n                            {(user.role === 'user') ? <Button color='inherit' href=\"/my_invitations\">Sent Invitations</Button> : ''}\r\n                            <Button color='inherit' href=\"/login\" onClick={this.onSubmit}>Logout: {user.username} ({(user.role === 'admin') ? 'player' : 'team'})</Button>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Toolbar />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Egy bejegyzes nemi adatai\r\nexport default class Post extends React.Component {\r\n    render() {\r\n        const { pst } = this.props;\r\n\r\n        return (\r\n            <Grid item>\r\n                <div className=\"post\">\r\n                    <div id={`informations${pst._id}`}>\r\n                        <h2>\r\n                            <Link to={`post_details/${pst._id}`}> {pst.name}</Link>\r\n                        </h2>\r\n                        <div>Game: {pst.game} </div>\r\n                        <div className=\"genre\">Genre: {pst.genre}</div>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n// Sima uzenet kiirasa\r\nexport default class Msg extends React.Component {\r\n    render() {\r\n        if (this.props.msg.length > 0) {\r\n            return (\r\n                <div className=\"msg\">\r\n                    <label id=\"msg\">{this.props.msg} </label>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport Post from './Post.jsx';\r\nimport Msg from '../other/Msg.jsx';\r\nimport { findAllPosts } from '../../service/post.js';\r\nimport {\r\n\tTypography,\r\n\tGrid,\r\n} from \"@mui/material\";\r\n\r\n// Az osszes bejegyzes listazasa\r\nexport default class Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: null,\r\n            msg: '',\r\n            nameFilter: '',\r\n            genreFilter: '',\r\n            genreDict: {},\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // Adatok betoltese\r\n    async componentDidMount() {\r\n        const posts = await findAllPosts();\r\n        this.setState({ posts });\r\n        this.makeDict('');\r\n    }\r\n\r\n    // Kereses filter\r\n    onChange(event) {\r\n        let { nameFilter } = this.state;\r\n        nameFilter = event.target.value;\r\n        this.setState({ nameFilter });\r\n        this.makeDict(nameFilter);\r\n    }\r\n\r\n    // Tipus filter\r\n    genreChange(event) {\r\n        let { genreFilter } = this.state;\r\n        genreFilter = event.target.value;\r\n        this.setState({ genreFilter });\r\n    }\r\n\r\n    // Varos szamozasa\r\n    makeDict(nameFilter) {\r\n        const dict = {};\r\n        const { posts } = this.state;\r\n        const filteredPosts = posts\r\n            .filter((pst) => (pst.name.toLowerCase().includes(nameFilter.toLowerCase())));\r\n        filteredPosts.forEach((pst) => {\r\n            dict[pst.genre] = 0;\r\n        });\r\n        filteredPosts.forEach((pst) => {\r\n            dict[pst.genre] += 1;\r\n        });\r\n        this.setState({ genreDict: dict });\r\n    }\r\n\r\n    // Oldal betoltese\r\n    render() {\r\n        const { nameFilter, genreFilter, genreDict } = this.state;\r\n        const { posts } = this.state;\r\n\r\n        if (!posts) {\r\n            return <div>Posts not loaded yet...</div>;\r\n        }\r\n\r\n        const filteredPosts = posts\r\n            .filter((pst) => (pst.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n            && (pst.genre === genreFilter || genreFilter === '')));\r\n\r\n        if (filteredPosts.length === 0) {\r\n            return (\r\n                <>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"center\" justify=\"center\" direction=\"column\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <Msg msg={this.state.msg} />\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <h1>Posts</h1>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\" direction=\"row\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <label htmlFor=\"search\">Search a player:</label>\r\n                            <input id=\"search\" type=\"text\" placeholder=\"Search..\" value={nameFilter} onChange={this.onChange} ></input>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                                <label htmlFor=\"genre\">Choose a genre:</label>\r\n                                <select id=\"genre\" name=\"genre\" onChange={this.genreChange}>\r\n                                    <option value=\"\" key=\"none\"> Show every genre </option>\r\n                                    {Object.keys(genreDict).map((key) => (\r\n                                        <option value={`${key}`} key={key}> {`${key} (${genreDict[key]})`} </option>\r\n                                    ))}\r\n                                </select>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container alignItems=\"left\" justifyContent=\"center\" justify=\"center\" direction=\"column\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                        <div id=\"container\">\r\n                            <div className=\"post\">\r\n                                    No posts in the database.\r\n                            </div>\r\n                        </div>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </>\r\n                \r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Grid container alignItems=\"center\" justifyContent=\"center\" justify=\"center\" direction=\"column\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <Msg msg={this.state.msg} />\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <h1>Posts</h1>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container justifyContent=\"center\" direction=\"row\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                            <label htmlFor=\"search\">Search a player:</label>\r\n                            <input id=\"search\" type=\"text\" placeholder=\"Search..\" value={nameFilter} onChange={this.onChange} ></input>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" align=\"left\" paragraph>\r\n                                <label htmlFor=\"genre\">Choose a genre:</label>\r\n                                <select id=\"genre\" name=\"genre\" onChange={this.genreChange}>\r\n                                    <option value=\"\" key=\"none\"> Show every genre </option>\r\n                                    {Object.keys(genreDict).map((key) => (\r\n                                        <option value={`${key}`} key={key}> {`${key} (${genreDict[key]})`} </option>\r\n                                    ))}\r\n                                </select>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justifyContent=\"center\" direction=\"row\">\r\n                            {filteredPosts.map((pst) => (\r\n                                <Grid item key={pst._id} >\r\n                                    <Post pst={pst} key={pst._id}/>\r\n                                </Grid>\r\n                            ))}\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport React from 'react';\r\n\r\n// Footer letrehozasa\r\nexport default function Footer() {\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Grid item>\r\n                <p>Copyright 2021</p>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import url from './post.js';\r\n\r\n// Login esemeny elkuldese\r\nexport async function loginSubmit() {\r\n    const formJSON = JSON.stringify({\r\n        username: document.getElementById('username').value,\r\n        password: document.getElementById('password').value,\r\n    });\r\n\r\n    const response = await fetch(`${url}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: formJSON,\r\n    });\r\n    const body = await response.json();\r\n    if (response.status < 400) {\r\n        document.cookie = `token=${body.token}`;\r\n\r\n        return 'OK';\r\n    }\r\n    return body.msg;\r\n}\r\n\r\n// Regisztracio elkuldese\r\nexport async function registerSubmit() {\r\n    const formJSON = JSON.stringify({\r\n        username: document.getElementById('username').value,\r\n        password1: document.getElementById('password1').value,\r\n        password2: document.getElementById('password2').value,\r\n    });\r\n\r\n    const response = await fetch(`${url}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: formJSON,\r\n    });\r\n    const body = await response.json();\r\n    if (response.status < 400) {\r\n        return 'OK';\r\n    }\r\n    return body.msg;\r\n}\r\n\r\nexport const invitation = 'we are inviting you for a 1v1 battle with 1 of our team members in a Tetris game: https://tetr.io/#WWFN';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport autoBind from 'auto-bind';\r\nimport Msg from './Msg.jsx';\r\nimport { loginSubmit } from '../../service/script.js';\r\nimport findUser from '../../service/user.js';\r\nimport {\r\n\tGrid,\r\n} from \"@mui/material\";\r\n\r\n// Login main szerkezete\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            user: {},\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // User betoltese\r\n    async componentDidMount() {\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    // submit kezelese\r\n    async onSubmit(event) {\r\n        event.preventDefault();\r\n        const msg = await loginSubmit();\r\n\r\n        if (msg === 'OK') {\r\n            window.location.href = '/';\r\n        } else {\r\n            this.setState({ msg });\r\n        }\r\n    }\r\n\r\n    // A kinezet\r\n    render() {\r\n        const { msg, user } = this.state;\r\n\r\n        if (JSON.stringify(user) !== '{}') {\r\n            return (\r\n                <>\r\n                    <Grid container direction=\"column\" justifyContent=\"center\" justify=\"center\" alignItems=\"center\"> \r\n                        <Grid Item> \r\n                            <h1>Login: </h1>\r\n                            <div id=\"login\">\r\n                                <div className=\"login\">\r\n                                    You are already logged in!\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Grid container direction=\"column\" justifyContent=\"center\" justify=\"center\" alignItems=\"center\"> \r\n                    <Grid Item> \r\n                        <Msg msg={msg}/>\r\n                    </Grid>\r\n                    <Grid Item>  \r\n                        <h1>Login</h1>\r\n                    </Grid> \r\n                        <form method=\"POST\" id=\"login\">\r\n                            <label htmlFor=\"username\">Username: </label>\r\n                            <input id=\"username\" type=\"text\" name=\"username\" required/>\r\n                            <label htmlFor=\"password\">Password: </label>\r\n                            <input id=\"password\" type=\"password\" name=\"password\" required/>\r\n                            <input type=\"button\" onClick={this.onSubmit} value=\"Login\"/>                               \r\n                        </form>\r\n                   \r\n                    <Grid Item> \r\n                        <div>\r\n                            Don&apos;t have an account? <Link to=\"./register\">Register now</Link>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid> \r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport Msg from './Msg.jsx';\r\nimport { registerSubmit } from '../../service/script.js';\r\nimport findUser from '../../service/user.js';\r\nimport {\r\n\tGrid,\r\n} from \"@mui/material\";\r\n// Registracios oldal kinezete\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            user: {},\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    async onSubmit(event) {\r\n        event.preventDefault();\r\n        const msg = await registerSubmit();\r\n\r\n        if (msg === 'OK') {\r\n            this.props.history.push('/login');\r\n        } else {\r\n            this.setState({ msg });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { msg, user } = this.state;\r\n\r\n        if (JSON.stringify(user) !== '{}') {\r\n            return (\r\n                <>\r\n                    <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"center\" justify=\"center\">\r\n                        <Grid Item> \r\n                            <h1>Register: </h1>\r\n                        </Grid> \r\n                        <Grid Item> \r\n                            <div id=\"register\">\r\n                                <div className=\"register\">\r\n                                    You are already logged in!\r\n                                </div>\r\n                            </div>\r\n                        </Grid> \r\n                    </Grid>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"center\" justify=\"center\">\r\n                    <Grid Item> \r\n                        <Msg msg={msg}/>\r\n                    </Grid> \r\n                    <Grid Item> \r\n                        <h1>Register</h1>\r\n                    </Grid> \r\n                    <form method=\"POST\" id=\"register\">\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input id=\"username\" type=\"text\" name=\"username\" required/>\r\n\r\n                        <label htmlFor=\"password1\">Password: </label>\r\n                        <input id=\"password1\" type=\"password\" name=\"password1\" required/>\r\n\r\n                        <label htmlFor=\"password2\">Password again: </label>\r\n                        <input id=\"password2\" type=\"password\" name=\"password2\" required/>\r\n\r\n                        <input type=\"button\" onClick={this.onSubmit} value=\"Register\"/>\r\n                    </form>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import url from './post.js';\r\n\r\n// Meghivasok lekerese egy bejegyzeshez\r\nexport async function findInvitations(pstID) {\r\n    const response = await fetch(`${url}/invitations?pst_id=${pstID}`);\r\n    const invitations = await response.json();\r\n    if (response.status === 200) return invitations;\r\n    return [];\r\n}\r\n\r\n// A sajat user meghivasai\r\nexport async function findMyInvitations() {\r\n    const response = await fetch(`${url}/myInvitations`, {\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n    });\r\n    const invitations = await response.json();\r\n    if (response.status === 200) return invitations;\r\n    return [];\r\n}\r\n\r\n// meghivas elkuldese\r\nexport async function createInvitation(postId) {\r\n    const invitation = {\r\n        name: document.getElementById('name').value,\r\n        id: postId,\r\n        date: document.getElementById('date').value,\r\n        time: document.getElementById('time').value,\r\n        description: document.getElementById('description').value,\r\n        requirements: document.getElementById('requirements').value,\r\n    };\r\n\r\n    const response = await fetch(`${url}/createInvitation`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(invitation),\r\n    });\r\n    const body = await response.json();\r\n    if (response.status < 400) {\r\n        return 'OK';\r\n    }\r\n    if (response.status >= 500) return 'Server problem';\r\n    return body.msg;\r\n}\r\n","import url from './post.js';\r\n\r\n// egy meghivas torlesenek a menete\r\nexport async function deleteInvitation(invId) {\r\n    const resp = await fetch(`${url}/deleteInvitation?id=${invId}`, {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n    });\r\n\r\n    if (resp.status === 204) {\r\n        // const ev = event.target.parentNode;\r\n        const ev = document.getElementById(`${invId}`);\r\n        ev.remove();\r\n        if (document.getElementsByClassName('invitation').length === 0) {\r\n            const invitations = document.getElementById('invitations');\r\n            const div1 = document.createElement('div');\r\n            div1.setAttribute('class', 'invitation');\r\n            const text1 = document.createTextNode('No registered invitations in the database.');\r\n            div1.appendChild(text1);\r\n            if (!document.getElementById('deleted')) {\r\n                invitations.appendChild(div1);\r\n            } else {\r\n                invitations.insertBefore(div1, invitations.firstChild);\r\n            }\r\n        }\r\n        if (!document.getElementById('deleted')) {\r\n            const invitations = document.getElementById('invitations');\r\n            const div1 = document.createElement('div');\r\n            div1.setAttribute('id', 'deleted');\r\n            const text1 = document.createTextNode('1 invitation deleted');\r\n            div1.appendChild(text1);\r\n            invitations.appendChild(div1);\r\n        }\r\n    } else {\r\n        const body = await resp.json();\r\n        // eslint-disable-next-line no-alert\r\n        alert(body.message);\r\n    }\r\n}\r\n\r\n// Meghivas elfogadasa\r\nexport async function acceptInvitation(invId) {\r\n    const resp = await fetch(`${url}/acceptInvitation?id=${invId}`, {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n    });\r\n    const body = await resp.json();\r\n    if (resp.status === 200) {\r\n        return 'OK';\r\n    }\r\n    return body.msg;\r\n}\r\n\r\n// Meghivas elutasitasa\r\nexport async function declineInvitation(invId) {\r\n    const resp = await fetch(`${url}/declineInvitation?id=${invId}`, {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n    });\r\n    const body = await resp.json();\r\n    if (resp.status === 200) {\r\n        return 'OK';\r\n    }\r\n    return body.msg;\r\n}\r\n","import React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport Msg from '../other/Msg.jsx';\r\nimport { findInvitations } from '../../service/invitation.js';\r\nimport findUser from '../../service/user.js';\r\nimport { deleteInvitation, acceptInvitation, declineInvitation } from '../../service/deleteInvitation.js';\r\nimport { Grid } from '@mui/material';\r\n\r\n// a meghivasok a bejegyzeseknel\r\nexport default class Invitations extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invitations: [],\r\n            user: {},\r\n            msg: '',\r\n            statusFilter: '',\r\n            statusDict: '',\r\n            firstDate: '',\r\n            secondDate: '',\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // Adatok betoltese\r\n    async componentDidMount() {\r\n        const { post } = this.props;\r\n        const invitations = await findInvitations(post._id);\r\n        this.setState({ invitations });\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n        this.makeDict('', '');\r\n    }\r\n\r\n    // statusz szerinti filter\r\n    statusChange(event) {\r\n        let { statusFilter } = this.state;\r\n        statusFilter = event.target.value;\r\n        this.setState({ statusFilter });\r\n    }\r\n\r\n    // Datum szerinti filter\r\n    firstDateChange(event) {\r\n        let { firstDate } = this.state;\r\n        const { secondDate } = this.state;\r\n        firstDate = event.target.value;\r\n        this.setState({ firstDate });\r\n        this.makeDict(firstDate, secondDate);\r\n    }\r\n\r\n    secondDateChange(event) {\r\n        let { secondDate } = this.state;\r\n        const { firstDate } = this.state;\r\n        secondDate = event.target.value;\r\n        this.setState({ secondDate });\r\n        this.makeDict(firstDate, secondDate);\r\n    }\r\n\r\n    // status osszegzes adminnak\r\n    makeDict(firstDate, secondDate) {\r\n        const dict = {};\r\n        let { invitations } = this.state;\r\n        invitations = invitations.filter((inv) => (firstDate === '' || Date.parse(inv.date) >= Date.parse(firstDate))\r\n            && (secondDate === '' || Date.parse(inv.date) <= Date.parse(secondDate)));\r\n        invitations.forEach((inv) => {\r\n            dict[inv.status] = 0;\r\n        });\r\n        invitations.forEach((inv) => {\r\n            dict[inv.status] += 1;\r\n        });\r\n        this.setState({ statusDict: dict });\r\n    }\r\n\r\n    // meghivas elfogadasa\r\n    async acceptInv(id) {\r\n        const msg = await acceptInvitation(id);\r\n        if (msg === 'OK') {\r\n            const invitations = await findInvitations(this.props.post._id);\r\n            this.setState({ invitations });\r\n        } else {\r\n            this.setState({ msg: 'Error' });\r\n        }\r\n    }\r\n\r\n    // meghivas elutasitasa event\r\n    async declineInv(id) {\r\n        const msg = await declineInvitation(id);\r\n        if (msg === 'OK') {\r\n            const invitations = await findInvitations(this.props.post._id);\r\n            this.setState({ invitations });\r\n        } else {\r\n            this.setState({ msg: 'Error' });\r\n        }\r\n    }\r\n\r\n    // Ha ures a meghivasok szama\r\n    empty(msg) {\r\n        return (\r\n            <>\r\n                <Grid item>\r\n                <h2>Invitations: </h2>\r\n                <div id=\"invitations\">\r\n                    <div className=\"invitation\">\r\n                        {msg}\r\n                    </div>\r\n                </div>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Ha valaki nem admin nezi a meghivasokat\r\n    notAdmin(user, invitations) {\r\n        if (invitations.filter((inv) => inv.name === user.username).length === 0) {\r\n            return this.empty('You have no registered invitations.');\r\n        }\r\n        return (\r\n            <>\r\n            <Grid container alignItems=\"center\"  justifyContent=\"center\" direction=\"column\" jusitfy=\"center\">\r\n                <Grid item>\r\n                <h2>Invitations: </h2>\r\n                </Grid>\r\n                <Grid item>\r\n                <div id=\"invitations\">\r\n                    {invitations.filter((inv) => inv.name === user.username)\r\n                        .map((inv) => (\r\n                            <Grid item key={inv._id}>\r\n                                <span style={{\"white-space\": \"pre-line\"}}> <b>Name:</b>  {inv.name} , date:  {inv.date} , time:  {inv.time}\r\n                                <br/> <b>Description:</b> {inv.description} <br/> <b>Requirements:</b> {inv.requirements} <br/> <b>Status:</b> <b>{inv.status}</b> &nbsp;\r\n                                <a href=\"#\" onClick={() => deleteInvitation(inv._id) }>delete Invitation</a>\r\n                                <hr/>\r\n                                </span>\r\n                            </Grid>\r\n                        ))}\r\n                </div>\r\n                </Grid>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // Oldal betoltese\r\n    render() {\r\n        const { post } = this.props;\r\n        let { invitations } = this.state;\r\n        const {\r\n            statusFilter, statusDict, firstDate, secondDate, msg, user,\r\n        } = this.state;\r\n        if (JSON.stringify(user) === '{}')    return this.empty('Log in to make invitations.');\r\n        if (user.role === 'user' || post.adminID !== user.id) {\r\n            return this.notAdmin(user, invitations);\r\n        }\r\n        invitations = invitations.filter((inv) => (inv.status === statusFilter || statusFilter === '')\r\n            && (firstDate === '' || Date.parse(inv.date) >= Date.parse(firstDate))\r\n            && (secondDate === '' || Date.parse(inv.date) <= Date.parse(secondDate)));\r\n        if (invitations.length === 0) {\r\n            return (\r\n                <>\r\n                <Grid container alignItems=\"center\"  justifyContent=\"center\" direction=\"column\" jusitfy=\"center\">\r\n                    <Grid item>\r\n                    <h2>Invitations: </h2>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <label htmlFor=\"status\">Choose a status:</label>\r\n                    <select id=\"status\" name=\"status\" onChange={this.statusChange}>\r\n                        <option value=\"\" key=\"none\"> Show every status </option>\r\n                        {Object.keys(statusDict).map((key) => (\r\n                            <option value={`${key}`} key={key}> {`${key} (${statusDict[key]})`} </option>\r\n                        ))}\r\n                    </select>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <label htmlFor=\"date\">Invitations from: </label>\r\n                    <input id=\"date\" type=\"date\" name=\"date\" value={firstDate} onChange={this.firstDateChange} required/>\r\n                    <label htmlFor=\"date\">Invitations until: </label>\r\n                    <input id=\"date\" type=\"date\" name=\"date\" value={secondDate} onChange={this.secondDateChange} required/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <div id=\"invitations\">\r\n                        <div className=\"invitation\">\r\n                            No registered invitations in the database.\r\n                        </div>\r\n                    </div>\r\n                    </Grid>\r\n                    </Grid>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n            <Grid container alignItems=\"center\"  justifyContent=\"center\" direction=\"column\" jusitfy=\"center\">\r\n                <Grid item>\r\n                <Msg msg={msg}/>\r\n                </Grid>\r\n                <Grid item>\r\n                <h2>Invitations: </h2>\r\n                </Grid>\r\n                <Grid item>\r\n                <label htmlFor=\"status\">Choose a status:</label>\r\n                <select id=\"status\" name=\"status\" onChange={this.statusChange}>\r\n                    <option value=\"\" key=\"none\"> Show every status </option>\r\n                    {Object.keys(statusDict).map((key) => (\r\n                        <option value={`${key}`} key={key}> {`${key} (${statusDict[key]})`} </option>\r\n                    ))}\r\n                </select>\r\n                <label htmlFor=\"date\">Invitations from: </label>\r\n                <input id=\"date\" type=\"date\" name=\"date\" value={firstDate} onChange={this.firstDateChange} required/>\r\n                <label htmlFor=\"date\">Invitations until: </label>\r\n                <input id=\"date\" type=\"date\" name=\"date\" value={secondDate} onChange={this.secondDateChange} required/>\r\n                </Grid>\r\n                <div id=\"invitations\">\r\n                    {invitations.filter((inv) => inv.status === 'pending').map((inv) => (\r\n                        <Grid item key={inv._id} boxSizing='border-box'>\r\n                            <div className=\"invitation\" key={inv._id} id={`${inv._id}`}>\r\n                                <span style={{\"white-space\": \"pre-line\"}}> <b>Name:</b>  {inv.name} , date:  {inv.date} , time:  {inv.time}\r\n                                <br/> <b>Description:</b> {inv.description} <br/> <b>Requirements:</b> {inv.requirements} <br/> <b>Status:</b> <b>{inv.status}</b> &nbsp;\r\n                                <a href=\"#\" onClick={() => this.acceptInv(inv._id)}>ACCEPT &nbsp;</a>\r\n                                <a href=\"#\" onClick={() => this.declineInv(inv._id)}>DECLINE</a>\r\n                                { inv.name === user.username ? (\r\n                                    <a href=\"#\" onClick={() => deleteInvitation(inv._id) }>&nbsp; delete Invitation</a>\r\n                                ) : (<></>)}\r\n                                <hr/>\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n                    ))}\r\n                    {invitations.filter((inv) => inv.status === 'accepted').map((inv) => (\r\n                        <Grid item key={inv._id} boxSizing='border-box'>\r\n                            <div className=\"invitation\" key={inv._id} id={`${inv._id}`}>\r\n                                <span style={{\"white-space\": \"pre-line\"}}> <b>Name:</b>  {inv.name} , date:  {inv.date} , time:  {inv.time}\r\n                                <br/> <b>Description:</b> {inv.description} <br/> <b>Requirements:</b> {inv.requirements} <br/> <b>Status:</b> <b>{inv.status}</b>\r\n                                { inv.name === user.username ? (\r\n                                    <a href=\"#\" onClick={() => deleteInvitation(inv._id) }>&nbsp; delete Invitation</a>\r\n                                ) : (<></>)}\r\n                                <hr/>\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n                    ))}\r\n                    {invitations.filter((inv) => inv.status === 'declined').map((inv) => (\r\n                        <Grid item key={inv._id} boxSizing='border-box'>\r\n                            <div className=\"invitation\" key={inv._id} id={`${inv._id}`}>\r\n                                <span style={{\"white-space\": \"pre-line\"}}> <b>Name:</b>  {inv.name} , date:  {inv.date} , time:  {inv.time}\r\n                                <br/> <b>Description:</b> {inv.description} <br/> <b>Requirements:</b> {inv.requirements} <br/> <b>Status:</b> <b>{inv.status}</b>\r\n                                { inv.name === user.username ? (\r\n                                    <a href=\"#\" onClick={() => deleteInvitation(inv._id) }>&nbsp; delete Invitation</a>\r\n                                ) : (<></>)}\r\n                                <hr/>\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n                    ))}\r\n                </div>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import url from './post.js';\r\n\r\nconst formDataServerUrl = 'http://localhost:8080/uploadPhoto';\r\n\r\n// fenykepek listajanak lekerese\r\nexport async function findPictures(pstID) {\r\n    const response = await fetch(`${url}/pictures?pst_id=${pstID}`);\r\n    const pictures = await response.json();\r\n    if (response.status === 200) return pictures;\r\n    return [];\r\n}\r\n\r\n// fenykep feltoltes\r\nexport async function uploadPhoto() {\r\n    const photoForm = document.getElementById('photoForm');\r\n\r\n    const formData = new FormData(photoForm);\r\n\r\n    const response = await fetch(`${formDataServerUrl}`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n        body: formData,\r\n    });\r\n    const body = await response.json();\r\n    if (response.status < 400) {\r\n        return 'OK';\r\n    }\r\n    if (response.status >= 500) return 'Server problem';\r\n    return body.msg;\r\n}\r\n","import React from 'react';\r\nimport url from '../../service/post.js';\r\n\r\n// Kepek megjelenitese\r\nexport default class Pictures extends React.Component {\r\n    render() {\r\n        const { pictures } = this.props;\r\n\r\n        if (pictures.length === 0) {\r\n            return (\r\n                <>\r\n                    <h2>Pictures: </h2>\r\n                    <div>\r\n                        <div className=\"picture\">\r\n                                No pictures in the database.\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <h2>Pictures: </h2>\r\n                <div>\r\n                    {pictures.map((pic) => (\r\n                        <div className=\"picture\" key={pic.photo}>\r\n                            <img src={`${url}/picture?photo=${pic.photo}`} alt={pic.name} key={pic.name}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import autoBind from 'auto-bind';\r\nimport React from 'react';\r\nimport { uploadPhoto, findPictures } from '../../service/picture.js';\r\nimport Pictures from './Pictures.jsx';\r\nimport Msg from '../other/Msg.jsx';\r\n\r\n// Fenykep feltoltese\r\nexport default class UploadPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            pictures: [],\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // Adatok betoltese\r\n    async componentDidMount() {\r\n        const pictures = await findPictures(this.props.post._id);\r\n        this.setState({ pictures });\r\n    }\r\n\r\n    // Bekuldes ellenorzese, es elkuldese\r\n    async onSubmit(event) {\r\n        event.preventDefault();\r\n        const msg = await uploadPhoto();\r\n        if (msg === 'OK') {\r\n            this.componentDidMount();\r\n            this.setState({ msg: 'Photo uploaded!' });\r\n        } else {\r\n            this.setState({ msg });\r\n        }\r\n    }\r\n\r\n    // A szerkezet renderelese\r\n    render() {\r\n        const { msg } = this.state;\r\n        const { post } = this.props;\r\n        const { user } = this.props;\r\n\r\n        if (JSON.stringify(user) === '{}') {\r\n            return (\r\n                <>\r\n                    <Pictures pictures={this.state.pictures}/>\r\n                </>\r\n            );\r\n        }\r\n        if (user.role !== 'admin' || user.id !== post.adminID) {\r\n            return (\r\n                <>\r\n                    <Pictures pictures={this.state.pictures}/>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Pictures pictures={this.state.pictures} />\r\n                <Msg msg={msg}/>\r\n                <h3>Upload Photo</h3>\r\n                <form method=\"POST\" id='photoForm' encType=\"multipart/form-data\">\r\n                    <input id=\"id\" type=\"hidden\" name=\"id\" placeholder=\"Post ID\" value= {post._id} />\r\n                    <label htmlFor=\"photo\"> Photo: </label>\r\n                    <input id=\"photo\" type=\"file\" name=\"photo\" required/>\r\n                    <br/>\r\n\r\n                    <input type=\"button\" onClick={this.onSubmit} value=\"Upload\"/>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { findPost } from '../../service/post.js';\r\nimport Msg from '../other/Msg.jsx';\r\nimport Invitations from '../invitation/Invitations.jsx';\r\nimport UploadPhoto from './UploadPhoto.jsx';\r\nimport findUser from '../../service/user.js';\r\nimport {\r\n    Typography,\r\n\tGrid,\r\n    TextField,\r\n} from \"@mui/material\";\r\n\r\n// egy bejegyzes osszes adata\r\nexport default class PostDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: {},\r\n            msg: '',\r\n            invitations: [],\r\n            user: {},\r\n        };\r\n    }\r\n\r\n    // betoltes...\r\n    async componentDidMount() {\r\n        const { pstID } = this.props.match.params;\r\n        const post = await findPost(pstID);\r\n        if (JSON.stringify(post) === '{}') {\r\n            this.setState({ msg: 'Not found' });\r\n        } else {\r\n            this.setState({ post });\r\n        }\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n        const { user } = this.state;\r\n\r\n        if (JSON.stringify(post) === '{}') {\r\n            return (<Msg msg={this.state.msg} />);\r\n        }\r\n        return (\r\n            <>\r\n            <Grid container alignItems=\"center\"  justifyContent=\"center\" direction=\"column\" jusitfy=\"center\"> \r\n                <Grid Item> \r\n                    <Typography align=\"center\" paragraph>\r\n                            <Msg msg={this.state.msg} />\r\n                    </Typography> \r\n                    \r\n                </Grid> \r\n                <Grid Item> \r\n                    <Typography align=\"center\" paragraph>\r\n                        <h1>{post.name}</h1>\r\n                    </Typography>\r\n                    \r\n                </Grid> \r\n                <Grid item>\r\n                <div className=\"post\">\r\n                    <div>Game:  {post.game} </div>\r\n                    <div>Genre:  {post.genre} </div>\r\n                    <div>City:  {post.city} </div>\r\n                    <div>Email: {post.email} </div>\r\n                    <div>Tel:  {post.telefon} </div>\r\n                    <div>Description: <br/> <TextField multiline rows=\"5\" cols=\"50\" value={post.description}/> </div>\r\n                </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Invitations post={post}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <UploadPhoto user={user} post={post} details={this}/>\r\n                </Grid>\r\n            </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport { createPost } from '../../service/post.js';\r\nimport Msg from '../other/Msg.jsx';\r\nimport findUser from '../../service/user.js';\r\nimport { Grid, Input, TextField } from '@mui/material';\r\n\r\n// Bejegyzes letrehozasa\r\nexport default class CreatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            post: {},\r\n            user: {},\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // Adatok inicializalasa\r\n    async componentDidMount() {\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    // Bejegyzes felepitese mint objektum\r\n    onChange(event) {\r\n        const { post } = this.state;\r\n        post[event.target.name] = event.target.value;\r\n        this.setState({ post });\r\n    }\r\n\r\n    // bekuldes eseten\r\n    async onSubmit(event) {\r\n        event.preventDefault();\r\n        this.state.post.adminID = this.state.user.id;\r\n        const msg = await createPost(this.state.post);\r\n        if (msg === 'OK') {\r\n            this.props.history.push('/');\r\n        } else {\r\n            this.setState({ msg });\r\n        }\r\n    }\r\n\r\n    // Oldal betoltese\r\n    render() {\r\n        const {\r\n            msg, post, user,\r\n        } = this.state;\r\n\r\n        if (JSON.stringify(user) === '{}') {\r\n            return (\r\n                <Msg msg={'Unauthorized'}/>\r\n            );\r\n        }\r\n\r\n        if (user.role !== 'admin') {\r\n            return (\r\n                <Msg msg={'Forbidden'}/>\r\n            );\r\n        }\r\n        return (\r\n                <Grid container alignItems=\"center\" justifyContent=\"center\" justify=\"center\" direction=\"column\">\r\n                    <Grid item>\r\n                        <Msg msg={msg}/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <h1>Create Post</h1>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <form method=\"POST\">\r\n                            <label htmlFor=\"name\">Post Name: </label>\r\n                            <TextField id=\"name\" type=\"text\" name=\"name\" placeholder=\"Post name\" value={post.name} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"genre\"> Genre name: </label>\r\n                            <TextField id=\"genre\" type=\"text\" name=\"genre\" placeholder=\"Genre name\" value={post.genre} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"game\"> Game name: </label>\r\n                            <TextField id=\"game\" type=\"text\" name=\"game\" placeholder=\"Game name\" value={post.game} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"city\"> City name: </label>\r\n                            <TextField id=\"city\" type=\"text\" name=\"city\" placeholder=\"City name\" value={post.city} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"email\"> Email: </label>\r\n                            <TextField id=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" value={post.email} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"telefon\">Telefon number: </label>\r\n                            <TextField id=\"telefon\" type=\"tel\" name=\"telefon\" placeholder=\"Telefon number\" value={post.telefon} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"description\"> Description: </label>\r\n                            <TextField multiline rows='5' id=\"description\" type=\"text\" name=\"description\" placeholder=\"description\" value={post.description} onChange={this.onChange} required/>\r\n                            <br/>\r\n\r\n                            \r\n                            <Input type=\"button\" onClick={this.onSubmit} value=\"Create Post\" />\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport { findAllPosts } from '../../service/post.js';\r\nimport findUser from '../../service/user.js';\r\nimport { createInvitation, findInvitations } from '../../service/invitation.js';\r\nimport Msg from '../other/Msg.jsx';\r\nimport { invitation } from '../../service/script.js';\r\nimport {\r\n\tGrid, Input, TextField, FormControl, Select, MenuItem\r\n} from \"@mui/material\";\r\n\r\n// Create invitation oldal-form\r\nexport default class CreateInvitation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            posts: [],\r\n            selectedPost: null,\r\n            user: null,\r\n            invitations: [],\r\n            invitationDate: '',\r\n            invitationTime: '',\r\n            description: '',\r\n            requirements: 'Stable internet connection',\r\n            invit: '',\r\n            postId: null,\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    // Kezdeti adatok betoltese, user, bejegyzesek, azokra meg a meghivasok\r\n    async componentDidMount() {\r\n        const posts = await findAllPosts();\r\n        let { invitations } = this.state;\r\n        this.setState({ posts });\r\n        if (posts.length > 0) {\r\n            const selectedPost = posts[0];\r\n            invitations = await findInvitations(selectedPost._id);\r\n            this.setState({ invitations });\r\n            this.setState({ selectedPost });\r\n        }\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n    }\r\n\r\n    // Submit kezelese, adatok ellenorzese es tovabbkuldese\r\n    async onSubmit(event) {\r\n        event.preventDefault();\r\n        const { postId } = this.state;\r\n        const msg = await createInvitation(postId);\r\n        if (msg === 'OK') {\r\n            this.props.history.push(`/post_details/${postId}`);\r\n        } else {\r\n            this.setState({ msg });\r\n        }\r\n    }\r\n\r\n    // Ha valtoztatunk bejegyzest...\r\n    async postChange() {\r\n        const { posts } = this.state;\r\n        let { selectedPost, postId } = this.state;\r\n        console.log(postId)\r\n        for (let i = 0; i < posts.length; i += 1) {\r\n            if (posts[i]._id === parseInt(postId, 10)) {\r\n                selectedPost = posts[i];\r\n            }\r\n        }\r\n        const invitations = await findInvitations(selectedPost._id);\r\n        let { description, invitationDate, invitationTime, invit } = this.state;\r\n\r\n        if (invitationDate === '') {\r\n            description = 'Hello ' + selectedPost.name + ' ' + invitation;\r\n            invit = 'Hello ' + selectedPost.name + ' ' + invitation;\r\n        } else {\r\n            if ( invitationTime === '' ) {\r\n                description = 'Hello ' + selectedPost.name + ' ' + invitation + ' on ' + invitationDate;\r\n            } else {\r\n                description = 'Hello ' + selectedPost.name + ' ' + invitation + ' on ' + invitationDate + ' at ' + invitationTime;\r\n            }\r\n            \r\n            invit = 'Hello ' + selectedPost.name + ' ' + invitation;\r\n        }\r\n        this.setState({ description, invit });\r\n        this.setState({ invitations });\r\n        this.setState({ selectedPost });\r\n    }\r\n\r\n    // Datum csere\r\n    changeInvitationDate(event) {\r\n        let { invitationDate, invitationTime, description, invit } = this.state;\r\n        invitationDate = event.target.value;\r\n        this.setState({ invitationDate });\r\n        if(invitationTime === '' ){\r\n            description = invit + ' on ' + invitationDate;\r\n        } else {\r\n            description = invit + ' on ' + invitationDate + ' at ' + invitationTime;\r\n        }\r\n        this.setState({ description })\r\n    }\r\n\r\n    changeInvitationTime(event) {\r\n        let { invitationDate, invitationTime, description, invit } = this.state;\r\n        invitationTime = event.target.value;\r\n        this.setState({ invitationTime });\r\n        if(invitationDate === '' ){\r\n            description = invit + ' at ' + invitationTime;\r\n        } else {\r\n            description = invit + ' on ' + invitationDate + ' at ' + invitationTime;\r\n        }\r\n        \r\n        this.setState({ description })\r\n    }\r\n\r\n    // oldal kinezete\r\n    render() {\r\n        const {\r\n            msg, posts, user, invitationDate, invitationTime, selectedPost, description, requirements\r\n        } = this.state;\r\n\r\n        let { postId } = this.state;\r\n\r\n        const handleId = (id) => {\r\n            postId=id;\r\n            this.setState({postId})\r\n        }\r\n\r\n        if (!user || !selectedPost) {\r\n            return <div>Create invitation not loaded yet...</div>;\r\n        }\r\n\r\n        if (posts.length === 0) {\r\n            return (\r\n                <Msg msg={'No posts in the database'}/>\r\n            );\r\n        }\r\n\r\n        if (JSON.stringify(user) === '{}') {\r\n            return (\r\n                <Msg msg={'Unauthorized'}/>\r\n            );\r\n        }\r\n        if (user &&  user.role === 'admin') {\r\n            return (\r\n                <Msg msg={'No permission'}/>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Grid container justifyContent=\"center\" direction=\"column\" alignItems=\"center\">\r\n                    <Grid Item>\r\n                        <Msg msg={msg}/>\r\n                    </Grid> \r\n                    <Grid Item>\r\n                        <h1>Create Invitation</h1>\r\n                    </Grid>\r\n                    <Grid Item>  \r\n                        <FormControl method=\"POST\">\r\n                            <label htmlFor=\"name\">Name: {user.username} </label>\r\n                            <Input id=\"name\" name=\"name\" type='hidden' value={user.username}/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"id\">Choose a post:</label>\r\n                            <Select label=\"Name...\" id=\"id\" name=\"id\" onChange={this.postChange}>\r\n                                {posts.map((pst) => (\r\n                                    <MenuItem value={`${pst._id}`} key={pst._id} onClick={() => handleId(`${pst._id}`)}> {`${pst.name}`} </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n\r\n                            <label htmlFor=\"date\">Invitation date: </label>\r\n                            <TextField id=\"date\" type=\"date\" name=\"date\" value={invitationDate} onChange={this.changeInvitationDate} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"time\">Invitation time: </label>\r\n                            <TextField id=\"time\" type=\"time\" name=\"time\" value={invitationTime} onChange={this.changeInvitationTime} required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"description\"> Description: </label>\r\n                            <TextField multiline rows=\"5\" id=\"description\" type=\"text\" name=\"description\" value={description} placeholder=\"description\" required/>\r\n                            <br/>\r\n\r\n                            <label htmlFor=\"requirements\"> Requirements: </label>\r\n                            <TextField multiline id=\"requirements\" type=\"text\" name=\"requirements\" value={requirements} placeholder=\"requirements\" required/>\r\n                            <br/>\r\n\r\n                            <Input type=\"button\" value=\"Send Invitation\" onClick={this.onSubmit} />\r\n                        </FormControl>\r\n                    </Grid> \r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport autoBind from 'auto-bind';\r\nimport findUser from '../../service/user.js';\r\nimport { deleteInvitation } from '../../service/deleteInvitation.js';\r\nimport { findMyInvitations } from '../../service/invitation.js';\r\nimport {\r\n\tGrid,\r\n} from \"@mui/material\";\r\n\r\n// Sajat meghivasok betoltese\r\nexport default class MyInvitations extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invitations: [],\r\n            user: {},\r\n            msg: '',\r\n            statusFilter: '',\r\n            statusDict: '',\r\n        };\r\n        autoBind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = await findUser();\r\n        this.setState({ user });\r\n        const invitations = await findMyInvitations();\r\n        this.setState({ invitations });\r\n        this.makeDict();\r\n    }\r\n\r\n    // Status szerinti filter\r\n    statusChange(event) {\r\n        let { statusFilter } = this.state;\r\n        statusFilter = event.target.value;\r\n        this.setState({ statusFilter });\r\n    }\r\n\r\n    // A statushoz tartozo szamok\r\n    makeDict() {\r\n        const dict = {};\r\n        const { invitations } = this.state;\r\n        invitations.forEach((inv) => {\r\n            dict[inv.status] = 0;\r\n        });\r\n        invitations.forEach((inv) => {\r\n            dict[inv.status] += 1;\r\n        });\r\n        this.setState({ statusDict: dict });\r\n    }\r\n\r\n    // Oldal betoltese\r\n    render() {\r\n        const { statusFilter } = this.state;\r\n        const { statusDict } = this.state;\r\n        const { user } = this.state;\r\n        const invitations = this.state.invitations.filter((inv) => (inv.status === statusFilter || statusFilter === ''));\r\n\r\n        if (JSON.stringify(user) === '{}') {\r\n            return (\r\n                <>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"cente\" direction=\"column\"> \r\n                        <Grid Item> \r\n                            <h1>Invitations: </h1>\r\n                        </Grid>\r\n                        <Grid Item>\r\n                            <div id=\"invitations\">\r\n                                <div className=\"invitation\">\r\n                                    Log in to make invitations.\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            );\r\n        }\r\n        if (invitations.length === 0) {\r\n            return (\r\n                <>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"cente\" direction=\"column\">\r\n                        <Grid Item> \r\n                            <h1>Invitations: </h1>\r\n                        </Grid> \r\n                        <Grid Item> \r\n                            <div id=\"invitations\">\r\n                                <div className=\"invitation\">\r\n                                    You have no registered invitations.\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Grid container alignItems=\"center\" justifyContent=\"cente\" direction=\"column\">\r\n                    <Grid Item> \r\n                        <h1>Invitations: </h1>\r\n                    </Grid>\r\n                    <Grid Item>\r\n                        <label htmlFor=\"status\">Choose a status:</label>\r\n                    </Grid>\r\n                    <Grid Item>                    \r\n                        <select id=\"status\" name=\"status\" onChange={this.statusChange}>\r\n                            <option value=\"\" key=\"none\"> Show every status </option>\r\n                            {Object.keys(statusDict).map((key) => (\r\n                                <option value={`${key}`} key={key}> {`${key} (${statusDict[key]})`} </option>\r\n                            ))}\r\n                        </select>\r\n                    </Grid>\r\n                    <Grid Item>\r\n                        <div id=\"invitations\">\r\n                            {invitations.map((inv) => (\r\n                                <div className=\"invitation\" key={inv._id} id={`${inv._id}`}>\r\n                                <span style={{\"white-space\": \"pre-line\"}}> <b>Name:</b>  {inv.name} , date:  {inv.date} , time:  {inv.time}\r\n                                <br/> <b>Description:</b> {inv.description} <br/> <b>Requirements:</b> {inv.requirements} <br/> <b>Status:</b> <b>{inv.status}</b>&nbsp;\r\n                                    <a href=\"#\" onClick={() => deleteInvitation(inv._id) }>delete Invitation</a>\r\n                                    <hr/>\r\n                                </span>\r\n                                </div>\r\n                                \r\n                            ))}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NavBar from './components/other/NavBar.jsx';\r\nimport Posts from './components/post/Posts.jsx';\r\nimport Footer from './components/other/Footer.jsx';\r\nimport Login from './components/other/Login.jsx';\r\nimport Register from './components/other/Register.jsx';\r\nimport PostDetails from './components/post/PostDetails.jsx';\r\nimport CreatePost from './components/post/CreatePost.jsx';\r\nimport CreateInvitation from './components/invitation/CreateInvitation.jsx';\r\nimport MyInvitations from './components/invitation/MyInvitations.jsx';\r\n\r\n// Az alap applikacio, main betoltese\r\nexport default function App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <NavBar />\r\n            <main>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Posts} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/my_invitations\" component={MyInvitations} />\r\n                    <Route exact path=\"/create_post\" component={CreatePost} />\r\n                    <Route exact path=\"/create_invitation\" component={CreateInvitation} />\r\n                    <Route path=\"/post_details/:pstID\" component={PostDetails} />\r\n                </Switch>\r\n            </main>\r\n            <Footer />\r\n        </BrowserRouter>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\n\r\n// Az app renderelese\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}